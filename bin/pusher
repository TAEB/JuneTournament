#!/usr/bin/env perl
use strict;
use warnings;
use IO::Socket::INET;

my $logfile = '/opt/nethack/nethack.alt.org/nh343/var/xlogfile';

sub initialize_connection {
    warn "Initializing a listener..";
    my $listener = IO::Socket::INET->new(
        LocalPort => 9010,
        Reuse     => 1,
        Listen    => 5,
    );
    do { warn $!; return } if !$listener;
    warn "Awaiting connection..";
    my $socket = $listener->accept;
    do { warn $!; return } if !$socket;
    warn "Got connection!";

    close $listener;

    my $start = '';
    warn "Awaiting start line..";
    until ($start =~ /^\d+\n/) {
        my $buf;
        $socket->recv($buf, 50);
        warn "Read '$buf'";
        $start .= $buf;
    }
    warn "Starting at $start..";

    return ($socket, $start);
}

sub tail {
    @_ or return;
    my $out   = shift;
    my $start = shift;

    open my $loghandle, '<', $logfile
        or die "Unable to open $logfile for reading: $!";

    my $curpos = 0;
    my $curline = 0;

    while (1) {
        my $line = <$loghandle>;
        if (!$line) {
            seek $loghandle, $curpos, 0;
            sleep 1;
            next;
        }

        $curpos = tell($loghandle);
        ++$curline;

        next if $curline < $start;

        my $ok = print { $out } $line;
        warn "Print failed: $!";
        next if $ok;

        return;
    }
}

while (1) {
    warn "Starting up..";
    eval {
        local $SIG{PIPE} = sub { die "Pipe broken" };
        tail(initialize_connection())
    };
    warn $@ if $@;

    sleep 1;
}

